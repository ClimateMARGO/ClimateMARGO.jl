var documenterSearchIndex = {"docs":
[{"location":"optimization/#Optimization","page":"Optimization","title":"Optimization","text":"","category":"section"},{"location":"optimization/#Supported-optimization-problems","page":"Optimization","title":"Supported optimization problems","text":"","category":"section"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"The following optimization problems are currently supported in MARGO:","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"Cost-benefit optimization\nCost-effectiveness optimization","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"All of these constraints rely on the concept of discounting to convert a time-series of costs and benefits into a single scalar-valued objective function.","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"ukw: Time discounting\nMathematically, a time-series g(t) is converted into a single scalar-valued function G by multiplying the time-series by a discount factor (1 - rho)^t-t_0 and integrating in time,    G = int_t_0^infty g(t) (1 - rho)^t-t_0 textdtA great deal of the climate economic literature concerns methods (or philosophies) for determining the discount rate, with commonly cited values ranging all the way from 0% to 5%. Values larger than the growth rate of the economy result in de-valuing of future generations, which some argue is unethical.Discounting is also mathematically convenient because it generally guarantees the objective function is bounded, which makes interpreting (and numerically solving) the optimization problem a lot easier.","category":"page"},{"location":"optimization/#Cost-benefit-analysis","page":"Optimization","title":"Cost-benefit analysis","text":"","category":"section"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"A natural and widely-used approach is cost-benefit analysis, in which the cost mathcalC_M R G A of deploying climate controls is balanced against the benefits mathcalB_M R G A of the avoided climate damages. Formally, we aim to maximize the net present benefits:","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"    max left int_t_0^t_f\n    left(mathcalB_M R G A - mathcalC_M R G A right) (1 + rho)^-(t-t_0)  textdt right","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"where rho is a social discount rate that determines the annual depreciation of future costs and benefits of climate control to society. There are different views about the appropriate non-zero discount rate to apply to multi-generational social utility. Here, we choose a discount rate of rho = 2 equal to the exogeneous economic growth rate of gamma = 2, on the low end of values used in the literature, motivated by our preference towards inter-generational equity.","category":"page"},{"location":"optimization/#Cost-effectiveness-of-keeping-below-a-warming-threshold","page":"Optimization","title":"Cost-effectiveness of keeping below a warming threshold","text":"","category":"section"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"The conventional cost-benefit approach to understanding climate change is limited by the poorly understood damage function, which is likely to continue being revised as more is learned about its behavior at high levels of forcing. An alternative approach, which presently guides global climate policy negotiations, is to prescribe a threshold of climate damages– or temperatures, as in the Paris Climate Agreement– which is not to be surpassed.","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"In this implementation, we aim to find the lowest net present costs of control deployments","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"    minleftint_t_0^t_f mathcalC_MRGA (1 + rho)^-(t-t_0) text dtright","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"which keep controlled damages below the level corresponding to a chosen temperature threshold, beta (T_MRG)^2 (1 - A(t))  beta (T^star)^2, which we rewrite","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"    T_MRGA  T^star","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"where T_MRGA is the \"adapted temperature\".","category":"page"},{"location":"optimization/#Additional-constraints","page":"Optimization","title":"Additional constraints","text":"","category":"section"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"For each control alpha in mathcalA =  M R G A, we assert a maximum deployment rate","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"    leftfractextdalphatextdtright le dotalpha","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"as a crude parameterization of social, technological, and economic inertia, which acts to forbid implausibly aggressive deployment and phase-out scenarios (see Appendix A2 for more discussion). We set dotM equiv dotR equiv 140years^-1 in line with the most ambitious climate goals and dotG = 120years^-1 to reflect the technological simplicity of attaining a large SRM forcing relative to mitigation and carbon dioxide removal. We interpret adaptation deployment costs as buying insurance against future damages at a fixed annual rate mathcalC_A A^2, with dotA = 0, which can be increased or decreased upon re-evaluation at a later date.","category":"page"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"We also set a control readiness condition which optionally limits how soon each control is \"ready\" to be deployed. In particular, in the default configuration we set t_R = 2030 and t_G = 2050 because carbon dioxide removal has not yet been deployed at a climatically significant scale and solar radiation management does not yet exist as a socio-technological system.","category":"page"},{"location":"optimization/#Optimization-algorithm","page":"Optimization","title":"Optimization algorithm","text":"","category":"section"},{"location":"optimization/","page":"Optimization","title":"Optimization","text":"We use the Interior Point Optimizer, an open source software package for large-scale nonlinear optimization, to minimize objective functions representing benefits and costs to society subject to assumed policy constraints. In practice, the control variables alpha in mathcalA =  M R G A are discretized into N = (t_f - t_0)  delta t timesteps (default delta t = 5 years, N = 36) resulting in a 4N-dimensional optimization problem. In the default (deterministic and convex) configuration, the model takes only mathcalO(10 textms) to solve after just-in-time compiling and effectively provides user feedback in real time.  This makes the model amenable to our forthcoming interactive web application, which is inspired by the impactful En-ROADS model web application.","category":"page"},{"location":"function_index/#Index","page":"Function index","title":"Index","text":"","category":"section"},{"location":"function_index/","page":"Function index","title":"Function index","text":"","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"EditURL = \"https://github.com/ClimateMARGO/ClimateMARGO.jl/blob/master/examples/one-two_dimensional_optimization.jl\"","category":"page"},{"location":"generated/one-two_dimensional_optimization/#A-simple-two-dimensional-optimization-problem","page":"1D and 2D optimization","title":"A simple two-dimensional optimization problem","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/#Loading-ClimateMARGO.jl","page":"1D and 2D optimization","title":"Loading ClimateMARGO.jl","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"using ClimateMARGO # Julia implementation of the MARGO model\nusing PyPlot # A basic plotting package","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"Loading submodules for convenience","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"using ClimateMARGO.Models\nusing ClimateMARGO.Utils\nusing ClimateMARGO.Diagnostics\nusing ClimateMARGO.Optimization","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Loading-the-default-MARGO-configuration","page":"1D and 2D optimization","title":"Loading the default MARGO configuration","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"params = deepcopy(ClimateMARGO.IO.included_configurations[\"default\"])","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"Slightly increasing the discount rate to 4% to be more comparable with other models","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"params.economics.ρ = 0.04","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Reducing-the-default-problem's-dimensionality-from-4N-to-2.","page":"1D and 2D optimization","title":"Reducing the default problem's dimensionality from 4N to 2.","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"The default optimization problem consists of optimizing the values of each of the 4 controls for N timesteps, giving a total problem size of:","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"4*length(t(params))","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Modifying-ClimateModelParameters","page":"1D and 2D optimization","title":"Modifying ClimateModelParameters","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"Thanks to MARGO's flexibility, we can get rid of two of the controls and set the other two to have constant values, effectively reducing the problem size to 2.","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"First, we have to remove initial conditions on the control variables, which would conflict with the constant-value constraint","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"params.economics.mitigate_init = nothing\nparams.economics.remove_init = nothing\nparams.economics.geoeng_init = nothing\nparams.economics.adapt_init = nothing","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Instanciating-the-ClimateModel","page":"1D and 2D optimization","title":"Instanciating the ClimateModel","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"Now that we've finished changing parameter values, we can create our MARGO model instance:","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"m = ClimateModel(params)","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Modifying-keyword-arguments-for-optimize_controls!","page":"1D and 2D optimization","title":"Modifying keyword arguments for optimize_controls!","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"We can make the controls constant in time by asserting a maximum deployment rate of zero","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"max_slope = Dict(\"mitigate\"=>0., \"remove\"=>0., \"geoeng\"=>0., \"adapt\"=>0.);\nnothing #hide","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"Now we get rid of geoengineering and adaptation options by setting their maximum deployment fraction to zero","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"max_deployment = Dict(\"mitigate\"=>1.0, \"remove\"=>1.0, \"geoeng\"=>0., \"adapt\"=>0.);\nnothing #hide","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Run-the-optimization-problem-once-to-test","page":"1D and 2D optimization","title":"Run the optimization problem once to test","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"@time optimize_controls!(m, obj_option = \"net_benefit\", max_slope=max_slope, max_deployment=Dict(\"mitigate\"=>1.0, \"remove\"=>0., \"geoeng\"=>0., \"adapt\"=>0.));\nnothing #hide","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Visualizing-the-results","page":"1D and 2D optimization","title":"Visualizing the results","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"fig, axes = ClimateMARGO.Plotting.plot_state(m);\naxes[3].legend(loc=\"upper left\")\naxes[4].legend(loc=\"lower left\")\naxes[5].legend(loc=\"lower right\")\naxes[6].legend(loc=\"upper right\")\naxes[6].set_ylim(0,2.5)\ngcf()","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Comparing-the-two-dimensional-optimization-with-the-brute-force-parameter-sweep-method","page":"1D and 2D optimization","title":"Comparing the two-dimensional optimization with the brute-force parameter sweep method","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/#Parameter-sweep","page":"1D and 2D optimization","title":"Parameter sweep","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"In the brute-force approach, we sweep through all possible values of Mitigation and Removal to map out the objective functions and constraints and visually identify the \"optimal\" solution in this 2-D space.","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"Ms = 0.:0.005:1.0;\nRs = 0.:0.005:1.0;\nnothing #hide","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"We will also consider four different temperature thresholds and visualize these constraints in the 2-D space","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"temp_goals = [1.5, 2.0, 3.0, 4.0]\n\ncontrol_cost = zeros(length(Rs), length(Ms)) .+ 0. #\nnet_benefit = zeros(length(Rs), length(Ms)) .+ 0. #\nmax_temp = zeros(length(Rs), length(Ms)) .+ 0. # stores the maximum temperature acheived for each combination\nmin_temp = zeros(length(Rs), length(Ms)) .+ 0. # stores the minimum temperature acheived for each combination\noptimal_controls = zeros(2, length(temp_goals), 2) # to hold optimal values computed using JuMP\n\nfor (o, option) = enumerate([\"adaptive_temp\", \"net_benefit\"])\n    for (i, M) = enumerate(Ms)\n        for (j, R) = enumerate(Rs)\n            m.controls.mitigate = zeros(size(t(m))) .+ M\n            m.controls.remove = zeros(size(t(m))) .+ R\n            if minimum(c(m, M=true, R=true)) <= 100.\n                continue\n            end\n            control_cost[j, i] = net_present_cost(m, discounting=true, M=true, R=true)\n            net_benefit[j, i] = net_present_benefit(m, discounting=true, M=true, R=true)\n            max_temp[j, i] = maximum(T(m, M=true, R=true))\n            min_temp[j, i] = minimum(T(m, M=true, R=true))\n        end\n    end\n    for (g, temp_goal) = enumerate(temp_goals)\n        optimize_controls!(m, obj_option = option, temp_goal = temp_goal, max_slope=max_slope, max_deployment=max_deployment);\n        optimal_controls[:, g, o] = deepcopy([m.controls.mitigate[1], m.controls.remove[1]])\n    end\nend","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Visualizing-the-one-dimensional-mitigation-optimization-problem","page":"1D and 2D optimization","title":"Visualizing the one-dimensional mitigation optimization problem","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"In the limit of zero-carbon dioxide removal, we can recover the 1D mitigation optimization problem from the 2D one.","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"col = ((1., 0.8, 0.), (0.8, 0.5, 0.), (0.7, 0.2, 0.), (0.6, 0., 0.),)\n\nfig = figure(figsize=(14,5))\nax = subplot(1,2,1)\nind1 = argmin(abs.(max_temp[1,:] .- 1.5))\nind2 = argmin(abs.(max_temp[1,:] .- 2.))\nind3 = argmin(abs.(max_temp[1,:] .- 3.))\nind4 = argmin(abs.(max_temp[1,:] .- 4.))\nplot(Ms, control_cost[1,:], \"k-\", lw=2)\nplot(Ms[ind1], control_cost[1,ind1], \"o\", color=col[1], markersize=10)\nplot(Ms[ind2], control_cost[1,ind2], \"o\", color=col[2], markersize=10)\nplot(Ms[ind3], control_cost[1,ind3], \"o\", color=col[3], markersize=10)\nplot(Ms[ind4], control_cost[1,ind4], \"o\", color=col[4], markersize=10)\nfor (g, temp_goal) = enumerate(temp_goals)\n    fill_between([], [], [], facecolor=col[g], label=latexstring(\"\\$\\\\max(T)>\\$\", temp_goal), alpha=0.5)\nend\nminM1 = Ms[ind1]\nminM2 = Ms[ind2]\nminM3 = Ms[ind3]\nminM4 = Ms[ind4]\nylims = ax.get_ylim()\nfill_between([minM2,minM1], [ylims[1], ylims[1]], [ylims[2],ylims[2]], color=col[1], alpha=0.2)\nfill_between([minM3,minM2], [ylims[1], ylims[1]], [ylims[2],ylims[2]], color=col[2], alpha=0.2)\nfill_between([minM4,minM3], [ylims[1], ylims[1]], [ylims[2],ylims[2]], color=col[3], alpha=0.2)\nfill_between([0,minM4], [ylims[1], ylims[1]], [ylims[2],ylims[2]], color=col[4], alpha=0.2)\naxvline(minM1, color=col[1])\naxvline(minM2, color=col[2])\naxvline(minM3, color=col[3])\naxvline(minM4, color=col[4])\nylim(ylims)\nxlim(0,1)\nxlabel(\"Emissions mitigation level [% reduction]\")\nxticks(0.:0.2:1.0, [\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\"])\nylabel(\"Net present cost of controls [trillion USD]\")\nplot([], [], \"o\", color=\"grey\", label=\"lowest cost\", markersize=10.)\nlegend(loc=\"upper left\")\n\nax = subplot(1,2,2)\nplot(Ms, net_benefit[1,:], \"k-\", lw=2)\nind = argmax(net_benefit[1,:])\nplot(Ms[ind], net_benefit[1,ind], \"ko\", markersize=10, label=\"most benefits\")\nylims = ax.get_ylim()\naxvline(minM1, color=col[1])\naxvline(minM2, color=col[2])\naxvline(minM3, color=col[3])\naxvline(minM4, color=col[4])\nylim(ylims)\nxlim(0,1)\nxlabel(\"Emissions mitigation level [% reduction]\")\nxticks(0.:0.2:1.0, [\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\"])\nylabel(\"Net present benefits, relative to baseline [trillion USD]\")\nlegend(loc=\"upper left\")\ngcf()\n\n#","category":"page"},{"location":"generated/one-two_dimensional_optimization/#Visualizing-the-two-dimensional-optimization-problem","page":"1D and 2D optimization","title":"Visualizing the two-dimensional optimization problem","text":"","category":"section"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"fig = figure(figsize=(14, 5))\n\no = 1\nsubplot(1,2,o)\npcolor(Ms, Rs, control_cost, cmap=\"Greys\", vmin=0., vmax=150.)\ncbar = colorbar(label=\"Net present cost of controls [trillion USD]\")\ncontrol_cost[(min_temp .<= 0.)] .= NaN\ncontour(Ms, Rs, control_cost, levels=[10, 50], colors=\"k\", linewidths=0.5, alpha=0.4)\n\ngrid(true, color=\"k\", alpha=0.25)\ntemp_mask = ones(size(max_temp))\ntemp_mask[max_temp .<= 4.0] .= NaN\ncontourf(Ms, Rs, temp_mask, cmap=\"Reds\", alpha=1.0, vmin=0., vmax=2.)\n\ntemp_mask = ones(size(min_temp))\ntemp_mask[min_temp .> 0.] .= NaN\ncontourf(Ms, Rs, temp_mask, cmap=\"Blues\", alpha=1.0, vmin=0., vmax=2.5)\ncontour(Ms, Rs, min_temp, colors=\"darkblue\", levels=[0.], linewidths=2.5)\nplot([], [], \"o\", color=\"grey\", label=\"lowest cost\", markersize=10.)\nplot([], [], \"-\", color=\"darkblue\", label=latexstring(\"\\$\\\\min(T)=\\$\", 0), lw=2.5)\n\nfor (g, temp_goal) = enumerate(temp_goals)\n    contour(Ms, Rs, max_temp, colors=[col[g]], levels=[temp_goal], linewidths=2.5)\n    plot(optimal_controls[1,g,o], optimal_controls[2,g,o], \"o\", color=col[g], markersize=10.)\n    fill_between([], [], [], facecolor=col[g], label=latexstring(\"\\$\\\\max(T)>\\$\", temp_goal), alpha=0.5)\nend\nlegend(loc=\"upper left\")\n\nxlabel(\"Emissions mitigation level [% reduction]\")\nxticks(0.:0.2:1.0, [\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\"])\nylabel(L\"CO$_{2e}$ removal rate [% of present-day emissions]\")\nyticks(0.:0.2:1.0, [\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\"])\nannotate(L\"$\\max(T) > 4\\degree$C\", (0.015, 0.03), xycoords=\"axes fraction\", color=\"darkred\", fontsize=9)\nannotate(L\"$\\min(T) < 0\\degree$C\", (0.72, 0.725), xycoords=\"axes fraction\", color=\"darkblue\", fontsize=9)\ntitle(\"Cost-effectiveness analysis\")\n\no = 2\nsubplot(1,2,o)\nq = pcolor(Ms, Rs, net_benefit, cmap=\"Greys_r\", vmin=0, vmax=250)\ncbar = colorbar(label=\"Net present benefits, relative to baseline [trillion USD]\", extend=\"both\")\ncontour(Ms, Rs, net_benefit, levels=[100, 200], colors=\"k\", linewidths=0.5, alpha=0.4)\n\ngrid(true, color=\"k\", alpha=0.25)\ntemp_mask = ones(size(min_temp))\ntemp_mask[(min_temp .> 0.)] .= NaN\ncontourf(Ms, Rs, temp_mask, cmap=\"Blues\", alpha=1.0, vmin=0., vmax=2.5)\ncontour(Ms, Rs, min_temp, colors=\"darkblue\", levels=[0.], linewidths=2.5)\nplot([], [], \"-\", color=\"darkblue\")\n\nplot(optimal_controls[1,1,2], optimal_controls[2,1,2], \"o\", color=\"k\", markersize=10., label=\"most benefits\")\nfor (g, temp_goal) = enumerate(temp_goals)\n    contour(Ms, Rs, max_temp, colors=[col[g]], levels=[temp_goal], linewidths=2.5)\nend\nlegend()\n\nxlabel(\"Emissions mitigation level [% reduction]\")\nxticks(0.:0.2:1.0, [\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\"])\nylabel(L\"CO$_{2e}$ removal rate [% of present-day emissions]\")\nyticks(0.:0.2:1.0, [\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\"])\nannotate(L\"$\\min(T) < 0\\degree$C\", (0.72, 0.725), xycoords=\"axes fraction\", color=\"darkblue\", fontsize=9)\ntitle(\"Cost-benefit analysis\")\ngcf()","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"","category":"page"},{"location":"generated/one-two_dimensional_optimization/","page":"1D and 2D optimization","title":"1D and 2D optimization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"installation_instructions/#Installation-instructions","page":"Installation instructions","title":"Installation instructions","text":"","category":"section"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"We recommend installing ClimateMARGO with the built-in Julia package manager, because this installs a stable, tagged release. You can install the latest version of ClimateMARGO using the built-in package manager (accessed by pressing ] in the Julia command prompt) to add the package and instantiate/build all dependencies. It is recommended that you create a new self-contained julia environment to install ClimateMARGO in.","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"julia>]\n(v1.7) pkg> activate .\n(v1.7) pkg> add ClimateMARGO\n(v1.7) pkg> instantiate","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"The command activate . will create (if not yet existent) and activate a new environment with the name of the parent folder.","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"ClimateMARGO.jl can be updated to the latest tagged release from the package manager by typing","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"(v1.7) pkg> update ClimateMARGO","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"In some cases, it may be useful to install versions of ClimateMARGO from a development branch named [Branch name], which can be done by typing","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"(v1.7) pkg> add https://github.com/ClimateMARGO/ClimateMARGO.jl#[Branch name]","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"At this time (and until ClimateMARGO v1.0.0), updating should be done with care, as ClimateMARGO is under rapid development and breaking changes to the user API occur often. But if anything does happen, please open an issue!","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"warn: Use Julia 1.5 or newer\nClimateMARGO requires at least Julia v1.5 to run.","category":"page"},{"location":"diagnostics/#Diagnostics","page":"Diagnostics","title":"Diagnostics","text":"","category":"section"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"We refer to key model variables which depend only on 1) the values of the control variables and 2) the input parameters as diagnostic variables. Examples are the CO_2e concentrations c_MR(t), the temperature change T_MRGA, and the cost of mitigation mathcalC_M M^2.","category":"page"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"In ClimateMARGO.jl, diagnostic variables are represented as julia functions, which are implemented using two separate methods, based on the type of the function arguments: the first method requires an explicit list of all the input parameters and control variables that determine the diagnostic variables; the second method leverages the ClimateModel struct to read in the required variables.","category":"page"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"For example, here are the two methods that define the diagnostic function T for the temperature change:","category":"page"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"CurrentModule = ClimateMARGO.Diagnostics","category":"page"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"T","category":"page"},{"location":"diagnostics/#ClimateMARGO.Diagnostics.T","page":"Diagnostics","title":"ClimateMARGO.Diagnostics.T","text":"T(T0, F, Cd, κ, B, t, dt)\n\nReturns the sum of the initial, fast mode, and slow mode temperature change.\n\nArguments\n\nT0::Float64: warming relative to pre-industrial [°C]\nF::Array{Float64}: change in radiative forcing since the initial time t_0 [W/m2]\nCd::Float64: deep ocean heat capacity [W yr m^2 K^-1]\nκ::Float64: ocean heat uptake rate [W m^2 K^-1]\nB::Float64: feedback parameter [W m^2 K^-1]\nt::Array{Float64}: year [years]\ndt::Float64: timestep [years]\n\n\n\n\n\nT(m::ClimateModel; M=false, R=false, G=false)\n\nReturns the sum of the initial, fast mode, and slow mode temperature change, as diagnosed from m and modified by the climate controls activated by the Boolean kwargs.\n\n\n\n\n\n","category":"function"},{"location":"Submodules/Controls/#Controls","page":"Controls","title":"Controls","text":"","category":"section"},{"location":"Submodules/Controls/","page":"Controls","title":"Controls","text":"Coming soon.","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"EditURL = \"https://github.com/ClimateMARGO/ClimateMARGO.jl/blob/master/examples/default_optimization.jl\"","category":"page"},{"location":"generated/default_optimization/#Optimization-of-the-default-MARGO-configuration","page":"Optimization with default parameters","title":"Optimization of the default MARGO configuration","text":"","category":"section"},{"location":"generated/default_optimization/#Using-ClimateMARGO.jl","page":"Optimization with default parameters","title":"Using ClimateMARGO.jl","text":"","category":"section"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"using ClimateMARGO\nusing ClimateMARGO.Models\nusing ClimateMARGO.Optimization","category":"page"},{"location":"generated/default_optimization/#Loading-preset-configurations","page":"Optimization with default parameters","title":"Loading preset configurations","text":"","category":"section"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"Load the pre-defined default MARGO parameters, which are described by the ClimateModelParameters struct","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"params = deepcopy(ClimateMARGO.IO.included_configurations[\"default\"])","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"Create a MARGO instance based on these parameters","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"m = ClimateModel(params);\nnothing #hide","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"By default, the climate control timeseries are all set to zero.","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"m.controls","category":"page"},{"location":"generated/default_optimization/#Real-time-climate-optimization","page":"Optimization with default parameters","title":"Real-time climate optimization","text":"","category":"section"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"Let's optimize the controls with the default settings, which finds the cheapest combination of the control timeseries that keeps adapted temperatures below 2°C.","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"@time optimize_controls!(m, temp_goal=1.5);\nnothing #hide","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"The optimization can be slow the first time since it has to compile. Let's re-initialize the model and see how fast it runs now that the the optimization routine has been precompiled.","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"m = ClimateModel(params);\n@time optimize_controls!(m, temp_goal=1.5);\nnothing #hide","category":"page"},{"location":"generated/default_optimization/#Visualizing-the-results","page":"Optimization with default parameters","title":"Visualizing the results","text":"","category":"section"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"Finally, let's plot the resulting temperature timeseries","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"using PyPlot\nfig, axes = ClimateMARGO.Plotting.plot_state(m, temp_goal=1.5);\ngcf()","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"","category":"page"},{"location":"generated/default_optimization/","page":"Optimization with default parameters","title":"Optimization with default parameters","text":"This page was generated using Literate.jl.","category":"page"},{"location":"theory/#Theory","page":"Theory","title":"Theory","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"The theory below formulates the simple default configuration of the MARGO model. We invite users to modify these equations or add additional ones, as required by their use cases. For a full description of the model, see the original ClimateMARGO.jl publication in Environmental Research Letters (and its supplementary information).","category":"page"},{"location":"theory/#The-causal-chain-of-climate-suffering","page":"Theory","title":"The causal chain of climate suffering","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"It is helpful to conceptualize climate change as a four step process that connects the human-caused emissions of greenhouse gases (GHGs) to the eventual climate suffering (or damages) that they cause. This four-step framing reflects the four major human actions (or controls) which can sever these links to reduce climate suffering: Mitigation of GHG emissions (e.g. switching away from fossil fuels), Removal of carbon dioxide from the atmosphere (e.g. by planting trees or storing biofuel emissions underground), Geoengineering by solar radiation management (e.g. injecting sulfate aerosols into the stratosphere to reduce incoming sunlight), or Adapting to the changed climate (e.g. relocating coastal communities displaced by rising seas or expanding indoor air conditioning to fight off intensifying heat waves).","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"textEmissions\noversettextMitigationnRightarrow\ntextGHGs\noversettextRemovalnRightarrow\ntextForcing\noversettextGeoengineeringnRightarrow\ntextWarming\noversettextAdaptationnRightarrow\ntextSuffering","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Letting climate change run rampant would clearly cause a lot of suffering; however, climate controls that slow or stop climate change are not free either. MARGO empowers users to explore the trade-offs between climate controls and climate suffering by employing an optimization framework commonly used in the climate-economics community. In this section, we develop a simple theory - a set of mathematical equations – which capture the key aspects of the entire causal chain of climate damages.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"(Image: Schematic explaining the MARGO model.)","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"ukw: Tuning MARGO's free parameters\nWe have attempted to make reasonable choices for the default values of MARGO's parameters in the equations below. Some of these, such as the climate physics variables, are well justified based on the best climate science research; others, such as the socio-economic parameters, are chosen based on our values (or those represented in the academic climate change literature). We encourage users to question these choices and plug their own values into ClimateMARGO. If you feel strongly that we should change some of the default values included in the model code, please reach out to us by opening an issue on Github.","category":"page"},{"location":"theory/#Greenhouse-gas-emissions","page":"Theory","title":"Greenhouse gas emissions","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"Since carbon dioxide (CO_2) is the dominant anthropogenic greenhouse gas, it dramatically simplifies the model to bundle all of the other gases into an equivalent concentration CO_2e, which produces an equivalent greenhouse effect. In MARGO, CO_2e is emitted at a rate q(t), with only a fraction r remaining in the atmosphere after a few years, net of uptake by the ocean and terrestrial biosphere.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"note: Climate control: Emissions mitigation\nGHG emissions are reduced by a Mitigation factor (1-M(t)), becoming q(t)(1-M(t)), where M(t) varies between 0% (high-emissions baseline) and 100% (full decarbonization).","category":"page"},{"location":"theory/#Greenhouse-gas-concentrations","page":"Theory","title":"Greenhouse gas concentrations","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"CO_2e continues to accumulate in the atmosphere and its concentrations c(t)= c_0 + int_t_0^t rq(t)text dt  will increase as long as the emissions q(t) are greater than zero.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"note: Climate control: Carbon dioxide removal\nRemoval of CO_2e, in contrast to mitigation, is de-coupled from instantaneous emissions and is expressed as the percentage of 2020 baseline emissions that are removed from the atmosphere in a given year, q_0R(t). A value of R=100 corresponds to removing 60 GtCO_2e per year, which is roughly equal to a recent upper-bound estimate of the global potential for negative emission technologies.A useful diagnostic quantity is the effective emissions    rq(t)(1-M(t)) - rq_0R(t)which is the annual rate of CO_2e accumulation in the atmosphere, including negative contributions from both emissions mitigation and CDR.The change in CO_2e concentrations is simply the integral of the effective emissions over time,    c_MR(t) = c_0 + int_t_0^t rq(t)(1-M(t)) text dt - rq_0 int_t_0^t R(t)text dt","category":"page"},{"location":"theory/#Radiative-forcing","page":"Theory","title":"Radiative forcing","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"Increasing CO_2e concentrations strengthen the greenhouse effect, reducing outgoing longwave radiation and causing an increased radiative forcing of F(t) = a ln(c(t)c_0), which exerts a warming effect on Earth's surface.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"note: Climate control: Solar geo-engineering\nGeoengineering by solar radiation management acts to offset a fraction of the CO_2e forcing,    F_MRG(t) = F_MR(t) - G(t) F_inftywhere F_MR = a ln(c_MR(t)  c_0) is the controlled CO_2e forcing (i.e. accounting for any mitigation and carbon dioxide removal) and F_infty = 85 W/m^2 is the maximum baseline CO_2e forcing, which is attained starting in 2150 when baseline emissions are assumed to reach zero. A value of G = 100 thus corresponds to a complete cancellation between the equilibrium warming from baseline CO_2e increases and the cooling from a full deployment of SRM.","category":"page"},{"location":"theory/#Global-warming-and-climate-suffering","page":"Theory","title":"Global warming and climate suffering","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"Near-surface air temperatures eventually increase by T(t) = F(t)B to balance the reduced cooling to space, where B(kappa + B) = 60 of the warming occurs within a few years and the remaining kappa(B + kappa) = 40 occurs over the course of several centuries due to ocean heat uptake. The feedback parameter B includes the effects of all climate feedbacks, except those involving the carbon cycle and the long-term ice sheet response, and the ocean heat uptake rate kappa parameterizes the combined effects of advection and diffusion of heat into the deep ocean.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"More specifically, the controlled near-surface air temperature evolves according to the total controlled forcing,","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"    T_MRG(t) - T_0 = fracF_MRG(t)B + kappa + frackappaB int_t_0^t frace^fract-ttau_Dtau_D fracF_MRG(t)B+kappa  textdt","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"where T_0 = 11°C is the present warming relative to preindustrial and tau_D = 240 years is the slow timescale of ocean heat uptake. The first term on the right-hand side represents a fast transient response while the second term represents a slow recalcitrant response due to the thermal inertia of the deep ocean. Climate inertia decouples the temperature response from instantaneous forcing and implies that an additional fraction of short-term warming (or cooling) is locked in for the future, even if radiative forcing is stabilized, as in the case of bringing emissions to zero in our model.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Anthropogenic warming causes a myriad of climate impacts, which result suffering (expressed in an economic model as a loss in welfare or monetary damages) that increase non-linearly with temperature, D = beta T^2, where the damage parameter beta is tuned such that a warming of 2°C results in damages of 4 of Gross World Product (GWP).","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"note: Climate control: Adaptation\nAdaptation to climate impacts acts to reduce damages by a fraction A. The controlled damages are thus given by    D_MRGA = beta T_MRG T^2 (1 - A(t))Although adaptation does not affect the planetary temperature directly, it is useful to consider an \"adapted temperature\" T_MRGA which yields controlled damages equivalent to the fully-controlled damages beta (T_MRGA)^2 = beta (T_MRG)^2 (1 - A(t)) and is defined    T_MRGA equiv T_MRG sqrt 1 - A(t) ","category":"page"},{"location":"theory/#The-costs-and-benefits-of-climate-control","page":"Theory","title":"The costs and benefits of climate control","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"Control costs are summed up across each of the four controls:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"    mathcalC = mathcalC_M M^3 + mathcalC_R R^3 + mathcalC_G G^3 + mathcalC_A A^3","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"where the C_* are the hypothetical annual costs of fully deploying that control and the cost functions are assumed to be convex functions of fractional deployment with zero initial marginal cost and are here all taken to be cubic for simplicity, such that marginal costs (their derivatives) increase quadratically.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"The benefits of deploying climate controls are the avoided climate damages relative to the high-emissions no-policy baseline scenario,","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"    mathcalB = D - D_MRGA = beta (T^2 - (T_MRGA)^2)","category":"page"},{"location":"theory/#Optimization:-what-makes-a-climate-\"optimal\"?","page":"Theory","title":"Optimization: what makes a climate \"optimal\"?","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"We use \"optimal\" in the mathematical sense of \"optimization\", i.e. the search for the maximum or minimum value of a given \"objective function\", which depends on a set of \"control variables\". Control variables are variables with unknown values that are solved for, and are different from known \"parameters\" which are input by the user. For example, the full set of control variables in MARGO is M(t) R(t) G(t) A(t) (with N timesteps in time). An objective function is any scalar-valued function of the control variables, meaning it only produces a single value (as opposed to a multi-valued vector). Optimizing MARGO largely consists of defining the objective function to optimize. For example, one might aim to minimize the total costs of climate controls.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"An optimization problem can further be customized by added constraints on valid sets of the control variables. For example, in MARGO we impose the constraints 0  M(t)  100 because it does not make any sense to mitigate emissions less than 0 or more than 100 (carbon dioxide removal is treated separately by the R(t) control variable). Similarly, we rule out any combination of control variables that produces unphysical outcomes like negative CO_2e concentrations.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Constraints can often be used to add meaning to an otherwise meaningless optimization problem. Consider the example above of minimizing the net costs of climate controls. Without any additional constraints, the solution to the problem is... to do nothing. Zero climate controls costs zero dollars. Suppose we now add in a constraint that the temperature change relative to pre-industrial must not exceed 2°C. While doing nothing still carries no climate control costs, it is no longer a solution to the problem since the resulting warming will overshoot the constraint by several degrees celsius. To see the solution to this problem, see the Optimization of the default MARGO configuration example.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Learn more about the currently implemented objective functions and constraints in Optimization.","category":"page"},{"location":"Submodules/Economics/#Economics","page":"Economics","title":"Economics","text":"","category":"section"},{"location":"Submodules/Economics/","page":"Economics","title":"Economics","text":"Coming soon.","category":"page"},{"location":"Submodules/Physics/#Physics","page":"Physics","title":"Physics","text":"","category":"section"},{"location":"Submodules/Physics/","page":"Physics","title":"Physics","text":"Coming soon.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"EditURL = \"https://github.com/ClimateMARGO/ClimateMARGO.jl/blob/master/examples/default_configuration.jl\"","category":"page"},{"location":"generated/default_configuration/#ClimateMARGO.jl-tutorial","page":"Default model configuration","title":"ClimateMARGO.jl tutorial","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"The following schematic shows the full formulation of the MARGO model, which is described in detail in the accompanying (but not yet peer-reviewed) manuscript, available for free at EarthArXiv.org/5bgyc. No-policy baseline emissions q(t) are prescribed, leading to changing greenhouse gas (CO_2e) concentrations, radiative forcing, temperatures, and climate damages. Emissions can be decreased by Mitigation; concentrations can be decreased by carbon dioxide Removal; forcing can be decreased by solar Geo-engineering; and the \"adapted\" temperature that leads to climate damages can be reduced by Adapting to the changed climate. <img src=\"../docs/src/MARGO_schematic.png\" alt=\"drawing\" width=\"60%\" style=\"float:left\"/>","category":"page"},{"location":"generated/default_configuration/#Import-software","page":"Default model configuration","title":"Import software","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"The MARGO model has been implemented and registered as the Julia package ClimateMARGO.jl, which can be installed with the command Pkg.add(\"ClimateMARGO\").","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"If you are running this tutorial via Binder, there is no need to install the package; just import it using the command below.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"using ClimateMARGO # Julia implementation of the MARGO model\nusing PyPlot # A basic plotting package","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"using ClimateMARGO.Models\nusing ClimateMARGO.Utils\nusing ClimateMARGO.Diagnostics","category":"page"},{"location":"generated/default_configuration/#Model-configuration","page":"Default model configuration","title":"Model configuration","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"An instance of MARGO ClimateModelParameters requires specifying a name and the parameters for three model subcomponents:","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Domain: determines the time period of interest, as well as the timestep and– in the policy response mode– the \"present\" decision-making year.\nEconomics: determines exogenous economic growth, the cliamte damage cost function, and the cost function for each of the four controls, and the discount rate.\nPhysics: determines the parameters that govern the aiborn fraction of emissions that remain in the atmosphere, the strength of climate feedbacks, and the rate of ocean heat uptake.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"An instance of the MARGO ClimateModel is determined by combining the prescribed set of ClimateModelParameters with timeseries of the four Controls, which will act as the control variables in the optimization framework:","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Mitigation of baseline emissions\nRemoval of carbon dioxide from the atmopshere\nGeongineering by solar radiation management, and\nAdaptating to the changed climate to reduce the damages of climate change impacts.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Here, we run through the full construction of the model with its \"default\" parameter values.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"name = \"default\";\nnothing #hide","category":"page"},{"location":"generated/default_configuration/#.-Setting-up-the-temporal-grid","page":"Default model configuration","title":"1. Setting up the temporal grid","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"First, we need to set up a time-frame for our experiment. Let's begin our simulation in the year 2020– present day– and consider out to 2200, with a 5-year timestep for computational efficiency.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"initial_year = 2020. # [yr]\nfinal_year = 2200. # [yr]\ndt = 5. # [yr]\nt_arr = t(initial_year, final_year, dt);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"While the model allows for shifting the \"present\" year forward or backward in time to simulate past and future policy decision-making processes, we will only consider the simplest case in which we take the perspective of a policy decision maker in the year 2020, which is also the initial year of our simulation.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"present_year = initial_year\ndom = Domain(dt, initial_year, initial_year, final_year);\n\n#### 2. Configuring the carbon cycle and energy balance models","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"CO_2e concentrations are given by: \\begin{equation} c{M,R}(t) = c{0} + \\int{t{0}}^{t} rq(t')(1-M(t')) \\text{ d}t' - q{0} \\int{t{0}}^{t} R(t')\\text{ d}t'. \\end{equation} where q(t) is a specific timeseries of no-climate-policy baseline emissions (with q(t{0}) = q{0}$), c{0}$ is the initial CO_2e concentration, and r is the fraction of emitted CO_2e that remains in the atmosphere net of short-term uptake by the ocean and biosphere. M(t) and R(t) represent the effects emissions mitigation and carbon dioxide removal, respectively, on CO_2e concentrations relative to the baseline; they will be initially set to zero and later determined by solving an optimization problem.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"The default no-policy scenario is one of rapid, fossil-fueled growth which leads to an accumulation of c(t) = 1400 ppm of CO_2e in the atmosphere by 2150, when emissions are assumed to finally reach net-zero.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"c0 = 460. # [ppm]\nr = 0.5; # [1] fraction of emissions remaining after biosphere and ocean uptake (Solomon 2009)\n\nq0 = 7.5\nq0mult = 3.\nt_peak = 2100.\nt_zero = 2150.\nq = ramp_emissions(t_arr, q0, q0mult, t_peak, t_zero);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"figure(figsize=(9,3.5))\n\nsubplot(1,2,1)\nplot(t_arr, ppm_to_GtCO2(q))\nxlabel(\"year\")\nylabel(L\"baseline emissions $q(t)$ [GtCO2 / year]\")\nxlim([2020, 2200])\ngrid(true)\n\nsubplot(1,2,2)\nq_effective = effective_emissions(r, q, 0., 0.) # No mitigation, no carbon removal\nc_baseline = c(c0, q_effective, dt)\nplot(t_arr, c_baseline)\nxlabel(\"year\")\nylabel(L\"baseline concentrations $c(t)$ [ppm]\")\nxlim([2020, 2200])\ntight_layout();\ngrid(true)\ngcf()","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"These CO_2e concentrations drive an anomalous greenhouse effect, which is represented by the radiative forcing \\begin{equation} F{M,R,G} = a \\ln\\left(\\frac{c{M,R}(t)}{c{0}}\\right) - G(t)F{\\infty}, \\end{equation} where a is an empirically determined coefficient, G(t) represents the effects of geoengineering, and F_infty = 85 W/m^2 is a scaling factor for the effects of geoengineering by Solar Radiation Modification (SRM).","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"a = (6.9/2.)/log(2.); # F4xCO2/2 / log(2) [W m^-2]\nFinf = 8.5;\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"figure(figsize=(4.5,3.2))\nF0 = 3.0\nF_baseline = F(a, c0, Finf, c_baseline, 0.)\nplot(t_arr, F_baseline .+ F0)\nxlabel(\"year\")\nylabel(L\"baseline radiative forcing $F(t)$ [W/m$^2$]\")\nxlim([2020, 2200])\ngrid(true)\nylim([0,10.]);\ngcf()","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Next, we configure MARGO's energy balance model, which is forced by the controlled forcing F_MRG. The two-layer energy balance model can be solved, approximately, as: \\begin{equation}     T{M,R,G}(t) - T{0} = \\frac{F{M,R,G}(t)}{B + \\kappa} + \\frac{\\kappa}{B} \\int{t{0}}^{t} \\frac{e^{\\frac{t'-t}{\\tau{D}}}}{\\tau{D}} \\frac{F{M,R,G}(t')}{B+\\kappa} \\, \\text{d}t', \\end{equation} where T_0 is the initial temperature change relative to preindustrial, B is the feedback parameter, kappa is , and the timescale tau_D = dfracC_DB dfracB + kappakappa is a more convenient expression for the deep ocean heat capacity C_D.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Default parameter values are taken from Geoffroy et al. 2013's physically-based calibration of the two-layer model to CMIP5.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Two-layer EBM parameters","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"B = 1.13; # Feedback parameter [J yr^-1 m^-2 K^-1]\nCd = 106.; # Deep ocean heat capacity [J m^-2 K^-1]\nκ = 0.73; # Heat exchange coefficient [J yr^-1 m^2 K^-1]\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Initial condition: present-day temperature, relative to pre-industrial","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"T0 = 1.1; # [degC] Berkeley Earth Surface Temperature (Rohde 2013)\n\nprint(\"τD = \", Int64(round(τd(Cd, B, κ))), \" years\")","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"These physical parameters can be used to diagnose the climate sensitivity to a doubling of CO_2 (ECS).","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"print(\"ECS = \", round(ECS(a, B),digits=1) ,\"ºC\")","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Combined, these parameters define the physical model, which is instantiated by the calling the Physics constructor method:","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Phys = Physics(c0, T0, a, B, Cd, κ, r);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/#.-Configuring-the-simple-economic-model","page":"Default model configuration","title":"3. Configuring the simple economic model","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Economic growth in MARGO (in terms of Gross World Product, GWP) is exogenous E(t) = E_0 (1 + gamma)^(t-t_0) and is entirely determined by the growth rate gamma. By default, we set gamma = 2.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"E0 = 100. # Gross World Product at t0 [10^12$ yr^-1]\nγ = 0.02 # economic growth rate\n\nE_arr = E(t_arr, E0, γ)\n\nfigure(figsize=(4, 2.5))\nplot(t_arr, E_arr)\nxlabel(\"year\")\nylabel(\"GWP [trillion USD]\")\nxlim([2020, 2200])\nylim([0, 3000]);\ngrid(true)\ngcf()","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Economic damages D_MRGA = tildebetaE(t) (Delta T_MRG)^2 (1 - A(t)), expressed as a fraction tildebeta(Delta T_MRG)^2 of the instantaneous Gross World Product, increase quadratically with temperature change relative to preindustrial. They can be decrease by adaptation controls A(t). The default value of the damage parameter tildebeta corresponds to damages of 2\\% of GWP at 3ºC of warming.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"βtilde = 0.01; # damages [%GWP / celsius^2]\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"The total cost of climate controls is simply the sum of their individual costs, each of which follows a parabolic cost function: \\begin{equation}     \\mathcal{C}{M,R,G,A} = \\mathcal{C}{M}M^2 + \\mathcal{C}{R}R^2 +  \\mathcal{C}{G}G^2 + \\mathcal{C}_{A}A^2 \\end{equation}","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"The calculation of the reference control costs mathcalC_M mathcalC_R mathcalC_G mathcalC_A are somewhat more complicated; see our Methods in the preprint and defaults.jl for details. Here, we simply provide their default numerical values, where the costs of mitigation mathcalC_M = tildemathcalC_M E(t) and geoengineering mathcalC_G = tildemathcalC_G E(t) grow with the size of the global economy and are thus specified as a fraction of GWP, while adaptaiton and removal costs are in trillions of USD per year.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"ti = findall(x->x==2100, t_arr)[1]\nmitigate_cost_percentGWP = 0.02\nmitigate_cost = mitigate_cost_percentGWP*E_arr[ti]/ppm_to_GtCO2(q[ti]); # [trillion USD / year / GtCO2]\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Costs of negative emissions technologies [US/tCO2]","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"costs = Dict(\n    \"BECCS\" => 150.,\n    \"DACCS\" => 200.,\n    \"Forests\" => 27.5,\n    \"Weathering\" => 125.,\n    \"Biochar\" => 70.,\n    \"Soils\" => 50.\n)","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Upper-bound potential for sequestration (GtCO2/year)","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"potentials = Dict(\n    \"BECCS\" => 5.,\n    \"DACCS\" => 5.,\n    \"Forests\" => 3.6,\n    \"Weathering\" => 4.,\n    \"Biochar\" => 2.,\n    \"Soils\" => 5.\n)\n\nmean_cost = sum(values(potentials) .* values(costs)) / sum(values(potentials)) # [$ tCO2^-1] weighted average\nCDR_potential = sum(values(potentials))\nCDR_potential_fraction = CDR_potential / ppm_to_GtCO2(q0)","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Estimate cost from Fuss 2018 (see synthesis Figure 14 and Table 2)","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"remove_cost = (mean_cost * CDR_potential*1.e9) / (CDR_potential_fraction^3) * 1.e-12; # [trillion USD / year]\n\nadapt_cost = 0.115; # [%GWP / year] directly from de Bruin, Dellink, and Tol (2009)\n\ngeoeng_cost = βtilde*(Finf/B)^2; # [% GWP]\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Climate damages and control costs are discounted at the relatively low rate of rho = 2, such that future damages and costs are reduced by a multiplicative discount factor (1 - rho)^(t-t_0).","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"ρ = 0.02;\n\nfigure(figsize=(4, 2.5))\nplot(t_arr, discount(t_arr, ρ, present_year)*100)\nxlabel(\"year\")\nylabel(\"discount factor (%)\")\nxlim([2020, 2200])\nylim([0, 100]);\ngrid(true)\ngcf()","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"These parameters, in addition to a no-policy baseline emissions time-series and present-day control values, define the economic model.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Econ = Economics(\n    E0, γ, βtilde, ρ, Finf,\n    mitigate_cost, remove_cost, geoeng_cost, adapt_cost,\n    0., 0., 0., 0., # Initial condition on control deployments at t[1]\n    q\n);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/#A-MARGO-model-configuration-is-uniquely-determined-by-the-parameters-defined-above","page":"Default model configuration","title":"A MARGO model configuration is uniquely determined by the parameters defined above","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"params = ClimateModelParameters(\n    name,\n    dom,\n    Econ,\n    Phys\n);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/#Instanciating-the-MARGO-climate-model","page":"Default model configuration","title":"Instanciating the MARGO climate model","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Along with economic and physical model components, the timeseries for each of the four controls must be specified. By default, we simply set these to zero.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Cont = Controls(\n    zeros(size(t_arr)), # mitigate\n    zeros(size(t_arr)), # remove\n    zeros(size(t_arr)), # geoeng\n    zeros(size(t_arr))  # adapt\n);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"The above parameters determine the full configuration of the MARGO model, which is instanced using the ClimateModel constructor method:","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"m = ClimateModel(\n    params,\n    Cont\n);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/#Model-optimization","page":"Default model configuration","title":"Model optimization","text":"","category":"section"},{"location":"generated/default_configuration/#Formulating-the-optimization-problem","page":"Default model configuration","title":"Formulating the optimization problem","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"By default, the optimization problem we solve is for the most cost-effective combination of controls, as determined by minimization of the discounted net present value,","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"\\begin{equation}     \\min\\left{\\int{t{0}}^{t{f}} \\mathcal{C}{M,R,G,A} (1 + \\rho)^{-(t-t_{0})} \\text{ d}t\\right} \\end{equation}","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"which keep controlled damages below the level corresponding to a chosen temperature threshold T^star,","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"\\begin{equation}     \\tilde{\\beta} E(t) (T_{M,R,G})^{2} (1 - A(t)) < \\tilde{\\beta} E(t) (T^{\\star})^{2}. \\end{equation}","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"temp_goal = 2.0;\nnothing #hide","category":"page"},{"location":"generated/default_configuration/#Additional-policy-/-inertia-constraints","page":"Default model configuration","title":"Additional policy / inertia constraints","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"The optimization is also subject to the constraints described below.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"First, we set a upper bounds on the maximum plausible deployment of each control.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"max_deployment = Dict(\"mitigate\"=>1., \"remove\"=>1., \"geoeng\"=>1., \"adapt\"=>0.4);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Second, we set upper limits on how quickly each control can be ramped up or down.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"(Adaptation is treated differently since we it interpret it as buying insurance against future climate damages, although the financing is spread evenly over the entire period.)","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"max_slope = Dict(\"mitigate\"=>1. /40., \"remove\"=>1. /40., \"geoeng\"=>1. /40., \"adapt\"=> 1. /40.);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Third, we impose restrictions on when controls can be first deployed. In particular, since carbon dioxide removal and solar radiation modification do not yet exist at scale, we delay these until 2030 and 2050, respectively, at the earliest.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"delay_deployment = Dict(\n    \"mitigate\"=>0.,\n    \"remove\"=>0.,\n    \"geoeng\"=>0.,\n    \"adapt\"=>0.\n);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/#Running-the-optimization","page":"Default model configuration","title":"Running the optimization","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"The optimization takes about ~40 seconds the first time it is run as the code compiles, but runs virtually instantly afterwards, even if model parameter values are changed.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"using ClimateMARGO.Optimization\n\n@time msolve = optimize_controls!(\n    m,\n    obj_option = \"adaptive_temp\", temp_goal = temp_goal,\n    max_deployment = max_deployment, max_slope = max_slope, delay_deployment = delay_deployment\n);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/#Plotting-MARGO-results","page":"Default model configuration","title":"Plotting MARGO results","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"We provide some convenient functions for plotting basic model results.","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"using ClimateMARGO.Plotting\nplot_state(m, temp_goal=temp_goal)\ngcf()","category":"page"},{"location":"generated/default_configuration/#Customizing-MARGO","page":"Default model configuration","title":"Customizing MARGO","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Try changing some of the parameters above and re-running the model!","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"For example, in the simulation below we set a more stringent temperature goal of T^star = 15 and omit solar geoengineering and adaptation completely (by setting their maximum deployment to zero).","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"temp_goal = 1.5\nmax_deployment[\"geoeng\"] = 0.\nmax_deployment[\"adapt\"] = 0.\n\n@time optimize_controls!(\n    m,\n    obj_option = \"adaptive_temp\", temp_goal = temp_goal,\n    max_deployment = max_deployment, max_slope = max_slope, delay_deployment = delay_deployment\n);\n\nplot_state(m, temp_goal=temp_goal)\ngcf()","category":"page"},{"location":"generated/default_configuration/#Saving-(and-loading)-MARGO-simulations-(or-parameter-configurations)","page":"Default model configuration","title":"Saving (and loading) MARGO simulations (or parameter configurations)","text":"","category":"section"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"using ClimateMARGO.IO\nexport_path = tempname() * \".json\"","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"export_parameters(export_path, params);\nnothing #hide","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"new_params = import_parameters(export_path)","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"Let's say we want to see what happens if climate feedbacks B are twice as strong as they are now (which means a lower feedback parameter).","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"new_params.name = \"stronger_feedbacks\"\nnew_params.physics.B /= 2.;\n\nnew_m = ClimateModel(new_params, Cont)","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"The new equilibrium climate sensitivity (recall ECS = F_2xB) is now:","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"print(\"ECS ≈ $(round(ECS(new_m), digits=1))°C\")","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"","category":"page"},{"location":"generated/default_configuration/","page":"Default model configuration","title":"Default model configuration","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#ClimateMARGO.jl","page":"Home","title":"ClimateMARGO.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia implementation of MARGO, an idealized framework for the Optimization of four climate change control strategies: Mitigation, Adaptation, Removal of carbon dioxide, and Geoengineering by solar radiation management.","category":"page"},{"location":"","page":"Home","title":"Home","text":"ClimateMARGO.jl couples together a very simple model of Earth's physical climate with a very simple economic model of climate damages (and the costs of \"controls\" that reduce those damages). Our design philosophy is that the MARGO model should be as simple as possible while still producing quasi-realistic climate trajectories over the next few hundred years.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Compared to more conventional Integrated Assessment Models (IAMs), MARGO is:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Faster: The algorithm solves convex optimization problems in less than 100 milliseconds (most use cases), meaning the model can be run interactively in real-time and that both large-ensemble, high-dimensional, and stochastic optimizations are all computationally feasible.\nMore accessible: The ClimateMARGO.jl package is free to use and is accessible in several different forms depending on the user's programming experience and use case:\nAn interactive web-app – For interactive exploration of climate storylines (and their sensitivity to model parameters).\nImporting ClimateMARGO.jl – For users proficient in Julia who want to use the MARGO model for education or scientific research.\nForking ClimateMARGO.jl – For users wanting to extend or fundamentally modify the MARGO model source code, e.g. for their own scientific or policy research.\nMore interpretable: The entire model algorithm is simple enough to be expressed in a single closed-form math equation and is determined by only a handful of intuitive free parameters (see also the MARGO flowchart below).\nMore transparent: The MARGO model is developed as an entirely open-source Julia package, ClimateMARGO.jl, complete with documentation, in-depth tutorials, and example applications.\nMore general: By including all four of the primary climate controls in the default configuration, more common configurations like \"Mitigation-only\" experiments are straight-forward to implement by simply turning unwanted features off.\nMore explicitly value-dependent: Rather than burying important value-dependent choices in various obscure economic and social parameters, we abstract away many of the complexities to yield a small number of intuitive parameters, which can be easily modified by users.\nMore extendable: The modular and interpretable nature of the Julia source implementation means that existing features can be easily modified and new features are easily added.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Schematic explaining the MARGO model.)","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Don't take MARGO's results too seriously\nThe extreme simplicity of the MARGO model also means its quantitative results should be taken with a handful of salt. MARGO should instead be used to explore underlying patterns and relative climate outcomes.","category":"page"},{"location":"#Getting-help","page":"Home","title":"Getting help","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you are interested in using ClimateMARGO.jl or are trying to figure out how to use it, please feel free to ask us questions and get in touch! Please feel free to open an issue if you have any questions, comments, suggestions, etc!","category":"page"},{"location":"Submodules/Domain/#Domain","page":"Domain","title":"Domain","text":"","category":"section"},{"location":"Submodules/Domain/","page":"Domain","title":"Domain","text":"Coming soon.","category":"page"}]
}
